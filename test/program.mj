program MJProgram
    int x;
    int y;
    int a[], b, c[];
    const int ac = 445, bc = 2483, cc = 3;
    const bool bcc = false;
{
    int method1() int x, x2[]; {
        x = - x + x % 3 + x / 4 * x - 10 * x;
        x = 3 * method1() * (3 + 8 + x) + x(3) + s();
        x = x + x2[2];

        { print(1212, 1); }

        if (x < 3 || x > 6) {
            x++;
            if (x < 2) x++;
            if (x < 0) x++; else x--;
        }
        else {
            x--;
            x--;
        }

        x = switch (x + 2) {
          case 0: yield x + 2;
          case 3: {
            yield -x + 3;
          }
          default: {
            print(x, 2);
            yield 3;
          }
        };

        x = switch (1) {
          default: yield 3;
        };

        return 3;
    }

    bool m2(int b, int c[], int d, int x[])
        int x2, x3;
        int x4[], x5, x7[];
    {
        print(1212);

        do
        {
            x4[2] ++;
            x3--;
            method1(12, 'a');
            method1();

            if (x2 > 2)
                continue;
            else {
                x2++;
                break;
            }

            method1(true, 'b', '4', false, 12131, 'c');

            do return true; while (false);
        }
        while (a >= b && c > 5 || d != d || (a[3] + b) == 2 && x4[1] < 3);

        read(x4[1]);

        { }

        return false;
    }

    void main(int c)
    {
    }
}
