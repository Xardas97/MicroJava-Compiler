program Parser_sve_ispravne_smene
    const int intConst1 = 3, intConst12 = 4;
    const bool boolConst = false;
    const char charConst = 'C';

    int int_array1[], int_var, int_array2[];
    bool bool_var;
{
    void method1(char form_par) {}

    int method2(int form_par_array[], bool form_par_bool)
        int methodInt1, methodInt2;
        char methodChar;
	{
	    if (form_par_bool == false) return -1;

        int_var = -intConst1 + 1 * (2 + method2(form_par_array, boolConst));
        method1(charConst);
        int_var--;

        methodInt1 = switch (int_var)
					 {
						case 0: methodChar = 'a'; yield 0;
						case 1: yield form_par_array[0];
						default: yield -1;
					 };

       print(int_var, 1);
       print(methodInt1);
	   return methodInt1;	
	}

    void main()
    {
	   int_array1 = new int[3];
	   int_var = method2(int_array1, true);
	   
	   if (boolConst || int_var >= (2 + 1) && int_array1[0] != 3)
	       if (true) print (1);
	   else
	   {
	       int_var++;
	       do
	       {
	           int_array1[0] = 1;
	           bool_var = false;
	           if (bool_var) break;
	           else continue;
	           
	           if (3 > 2 && bool_var) return;
	       } while (int_var % 2 <= 1 || int_var / 2 >= 4);
	   }
    }
}